openapi: "3.0.0"
info:
  title: Pendulum API
  version: 0.0.1
servers:
  - url: https://dev.sample-server.com/v1
    description: Production Server
paths:
  /numbered_ticket:
    get:
      tags:
        - Matchings
      summary: create a waiting user
      responses:
        '200':
          description: a uuid that is used in matching list
          content:
            application/json:
              schema: 
                type: string
                example:
                  numberedTicket: 550e8400e29b41d4a716446655440000
  /waiting_users/{numberedTicket}:
    get:
      tags:
        - Matchings
      summary: get a waiting user by specified uuid
      parameters:
        - name: numberedTicket
          in: path
          description: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: waiting user
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/waitingUser'
                example:
                  numberedTicket: 550e8400e29b41d4a716446655440000
                  admissionTicket: a205cbb134ff412dc3212333448f1200
                  status: waiting
                  waitedBy: "2018-12-08T03:40:50"
  /battle_rooms/{admissionTicket}:
    get:
      tags:
        - Battle Room
      summary: get battle room information
      parameters:
        - name: admissionTicket
          in: path
          description: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: battle room information
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/battleRoom'
                example:
                  status: ready
  /battle_rooms/{admissionTicket}/fencers/type:
    get:
      tags:
        - Battle Room
      summary: get type of your fancer in Battle Room(B/W)
      parameters:
        - name: admissionTicket
          in: path
          description: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: type of your fancer
          content:
            application/json:
              schema: 
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - black
                      - white
                      - unknown
  /battle_rooms/{admissionTicket}/histories:
    put:
      tags:
        - Battle Room
      summary: register fencer's action
      parameters:
        - name: admissionTicket
          in: path
          description: uuid
          required: true
          schema:
            type: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                step:
                  type: integer
      responses:
        '204':
          description: response is no content yet
      
      
        
components: 
  schemas: 
    waitingUser:
      $ref: '#/components/schemas/waitingUser'
      properties: 
        status: 
          type: string
          enum:
            - waiting
            - admission
            - exited
          required: true
        numberedTicket:
          type: string
          format: uuid4
          required: true
        waitedBy:
          type: string
          format: dateTime
          required: true
        admissionTicket:
          type: string
          format: uuid4
          required: false
    battleRoom:
      $ref: '#/components/schemas/battleRoom'
      properties: 
        status: 
          type: string
          enum:
            - ready
            - started
            - ended
          required: true
        turn:
          type: string
          required: false
        fencers:
          type: object
          properties:
            black:
              $ref: '#/components/schemas/fencer'
            white:
              $ref: '#/components/schemas/fencer'
    fencer:
      $ref: '#/components/schemas/fencer'
      properties: 
        position:
          type: integer
          required: true
        choices:
          type: array
          required: false
          items:
            type: object
            $ref: '#/components/schemas/choice'
    choice:
      $ref: '#/components/schemas/choice'
      description: 今後のターンで行える移動や攻撃などの選択肢
      properties:
        action:
          type: string
          enum:
            - step
            - attack
            - defense
            - goOutside
            - overOpponent
        step:
          type: integer
          required: true
        limit:
          type: integer
          required: true